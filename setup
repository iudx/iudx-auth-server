#!/bin/sh

id=`id | cut -f1 -d'('`
if [ $id != "uid=0" ]
then
	echo
	echo "You must be root to run this script"
	echo
	exit
fi

syspatch

useradd -s /sbin/nologin -d /nonexistent aaa

pkg_add postgresql-server postgresql-client node
rcctl enable postgresql

rm -rf passwords
mkdir passwords

touch passwords/crl.db.password
touch passwords/auth.db.password
touch passwords/admin.db.password

chmod 400 passwords/*

head /dev/urandom | sha256 > passwords/crl.db.password
head /dev/urandom | sha256 > passwords/auth.db.password
head /dev/urandom | sha256 > passwords/admin.db.password

echo your-telegram-api-key > telegram.apikey
echo your-telegram-chat-id > telegram.chatid

chmod 400 telegram.*
chmod 400 *.sql

crl_password=`cat passwords/crl.db.password`
sed -i "s/XXXcrlXXX/$crl_password/" schema.sql 

auth_password=`cat passwords/auth.db.password`
sed -i "s/XXXauthXXX/$auth_password/" schema.sql 

# setup postgresql
mv passwords/admin.db.password /var/postgresql/
chown _postgresql:_postgresql /var/postgresql/admin.db.password

mv schema.sql /var/postgresql/
chown _postgresql:_postgresql /var/postgresql/schema.sql

cp setup.postgresql.openbsd /var/postgresql/
chown _postgresql:_postgresql /var/postgresql/setup.postgresql.openbsd

chmod u+x /var/postgresql/setup.postgresql.openbsd
su _postgresql -c /var/postgresql/setup.postgresql.openbsd

until su _postgresql -c pg_isready
do
	sleep 1
done

rm -rf /var/postgresql/setup.postgresql.openbsd

cp rc.local /etc/
cp pf.conf /etc/

touch https-key.pem
chmod 400 https-key.pem

openssl req -x509 -nodes -days 365 -subj "/CN=localhost" -newkey rsa:2048 -keyout https-key.pem -out https-certificate.pem

git clone --depth=1 https://github.com/rbccps-iisc/node-aperture
cd node-aperture
npm install
npm audit fix --force

cd ..
npm install
npm audit fix --force

echo /sbin/pfctl -t bruteforce -T expire 86400 > /etc/daily.local
echo syspatch >> /etc/daily.local

rcctl disable sndiod slaacd smtpd xenodm 

echo boot > /etc/boot.conf

echo /usr/bin/pkill tmux >> /etc/rc.shutdown
echo /usr/sbin/rcctl stop postgresql >> /etc/rc.shutdown

if [ $1 = "noreboot" ]
then
    rcctl start postgresql
    ./run.tmux
    ./run.crl.tmux
else
    reboot
fi
